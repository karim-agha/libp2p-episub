syntax = "proto3";

package rpc.pb;

/// Represents a member of the p2p network
message AddressablePeer {
	bytes peer_id = 1;
	bytes multiaddr = 2;
}

// Represents a message that is sent between peer nodes
message Rpc {
	string topic = 1;
	oneof Action {
		Join join = 2;
		ForwardJoin forwardJoin = 3;
		Neighbor neighbor = 4;
		Shuffle shuffle = 5;
		ShuffleReply shuffleReply = 6;
		Disconnect disconnect = 7;
		Message message = 8;
	}
}

message Join {
	uint32 ttl = 1;
}

message ForwardJoin {
	uint32 ttl = 2;
	AddressablePeer peer = 3;
}

message Neighbor {
	Priority priority = 2;

	enum Priority {
		LOW = 0;
		HIGH = 1;
	}
}

message Shuffle {
	uint32 ttl = 2;
	AddressablePeer origin = 3;
	repeated AddressablePeer active = 4;
	repeated AddressablePeer passive = 5;
}

message ShuffleReply {
	repeated AddressablePeer nodes = 2;
}

message Disconnect {
	bool alive = 2;
}

message Message {
	bytes data = 1;
}